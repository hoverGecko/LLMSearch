AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  llm-search backend SAM template
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Environment:
      Variables:
        USERS_TABLE_NAME: !Ref UsersTable
        JWT_SECRET: !Ref JwtSecret
        BING_API_KEY: !Ref BingApiKey
        HYPERBOLIC_AI_API_KEY: !Ref HyperbolicAiApiKey
        DEEPSEEK_API_KEY: !Ref DeepseekApiKey
        OPEN_ROUTER_API_KEY: !Ref OpenRouterApiKey
        APP_ENVIRONMENT: !Ref EnvironmentType # Pass environment type to functions
  Api:
    Cors:
      AllowOrigin: !If
        - IsDevEnvironment
        - "'*'"
        - "'https://llm-search.pages.dev'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowMethods: "'GET,POST,OPTIONS'"

Parameters:
  JwtSecret:
    Type: String
    NoEcho: true
  BingApiKey:
    Type: String
    NoEcho: true
  HyperbolicAiApiKey:
    Type: String
    NoEcho: true
  DeepseekApiKey:
    Type: String
    NoEcho: true
  OpenRouterApiKey:
    Type: String
    NoEcho: true
  EnvironmentType:
    Type: String
    Description: The deployment environment (dev or prod)
    AllowedValues:
      - dev
      - prod
    Default: prod

Conditions:
  IsDevEnvironment: !Equals [ !Ref EnvironmentType, dev ]
  IsProdEnvironment: !Equals [ !Ref EnvironmentType, prod ]

Resources:
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-UsersTable-${EnvironmentType}"
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: !If [ IsProdEnvironment, true, false ]
      DeletionProtectionEnabled: !If [ IsProdEnvironment, true, false ]

  # Shared Layer for Chromium
  ChromiumLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Chromium with Node.js integration for AWS Lambda
      ContentUri: chromium-layer/
      CompatibleRuntimes: 
        - &nodejsRuntime nodejs20.x
      CompatibleArchitectures:
        - &chromiumArch x86_64
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: *nodejsRuntime
      BuildArchitecture: *chromiumArch

  # Function to handle the initial search request
  SearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: main/
      Handler: handlers/searchHandler.handler
      Runtime: *nodejsRuntime
      Architectures:
        - *chromiumArch
      Layers:
        - !Ref ChromiumLayer
      Events:
        SearchApi:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /search
            Method: get
      Timeout: 30
      MemorySize: 1024
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handlers/searchHandler.ts

  # Function to process a single URL (scrape + partial summary)
  ProcessUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: main/
      Handler: handlers/processUrlHandler.handler
      Runtime: *nodejsRuntime
      Architectures:
        - *chromiumArch
      Layers:
        - !Ref ChromiumLayer
      Events:
        ProcessUrlApi:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /process-url
            Method: post
      Timeout: 120 # Needs longer timeout for scraping/LLM
      MemorySize: 3008 # Needs more memory for Chromium/LLM
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handlers/processUrlHandler.ts
        External:
          - "@sparticuz/chromium"

  # Function to generate the GENERAL summary from partial summaries
  GenerateGeneralSummaryFunction: # Renamed Function
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: main/
      Handler: handlers/generateGeneralSummaryHandler.handler
      Runtime: *nodejsRuntime
      Architectures:
        - *chromiumArch
      # No Chromium layer needed
      Events:
        GenerateGeneralSummaryApi: # Renamed Event ID
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /generate-general-summary
            Method: post
      Timeout: 60
      MemorySize: 512
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handlers/generateGeneralSummaryHandler.ts

  # Function to generate a single WEBPAGE summary
  GenerateWebpageSummaryFunction: # New Function
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: main/
      Handler: handlers/generateWebpageSummaryHandler.handler
      Runtime: *nodejsRuntime
      Architectures:
        - *chromiumArch
      # No Chromium layer needed
      Events:
        GenerateWebpageSummaryApi: # New Event ID
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /generate-webpage-summary # New Path
            Method: post
      Timeout: 60 # Timeout for LLM call
      MemorySize: 512 # Memory for LLM call
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handlers/generateWebpageSummaryHandler.ts

  # Function to handle chat continuation
  ChatFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: main/
      Handler: handlers/chatHandler.handler # Path to the new handler
      Runtime: *nodejsRuntime
      Architectures:
        - *chromiumArch
      Events:
        ChatApi:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /chat
            Method: post
      Timeout: 60 # Timeout for LLM call
      MemorySize: 512 # Memory for LLM call
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handlers/chatHandler.ts

  # Authentication Functions
  SignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: main/
      Handler: handlers/authHandler.signupHandler
      Runtime: *nodejsRuntime
      Architectures:
        - *chromiumArch
      Timeout: 15
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Environment:
        Variables:
          USERS_TABLE_NAME: !Ref UsersTable
      Events:
        SignupApi:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /signup
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handlers/authHandler.ts
        External:
          - mock-aws-s3
          - aws-sdk
          - nock

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: main/
      Handler: handlers/authHandler.loginHandler
      Runtime: *nodejsRuntime
      Architectures:
        - *chromiumArch
      Timeout: 15
      MemorySize: 256
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        LoginApi:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /login
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handlers/authHandler.ts
        External:
          - mock-aws-s3
          - aws-sdk
          - nock

  StatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: main/
      Handler: handlers/authHandler.statusHandler
      Runtime: *nodejsRuntime
      Architectures:
        - *chromiumArch
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        StatusApi:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /status
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - handlers/authHandler.ts
        External:
          - mock-aws-s3
          - aws-sdk
          - nock
